{"ast":null,"code":"var _jsxFileName = \"/Users/akash/crwn-clothing/crwn-clothing/src/components/loader.jsx\";\nimport React, { Component } from 'react';\nimport { StyleSheet, View, Modal, Image, ActivityIndicator } from 'react-native';\nimport Colors from '../../config/Colors';\n\nclass Loader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: this.props.isLoading\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    return {\n      isLoading: nextProps.isLoading\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      transparent: true,\n      animationType: 'none',\n      visible: this.state.isLoading,\n      style: {\n        zIndex: 1100\n      },\n      onRequestClose: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: styles.modalBackground,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: styles.activityIndicatorWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ActivityIndicator, {\n      animating: this.state.loading,\n      color: Colors.primary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  modalBackground: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    backgroundColor: '#rgba(0, 0, 0, 0.5)',\n    zIndex: 1000\n  },\n  activityIndicatorWrapper: {\n    backgroundColor: '#FFFFFF',\n    height: 100,\n    width: 100,\n    borderRadius: 10,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  }\n});\nexport default Loader;","map":{"version":3,"sources":["/Users/akash/crwn-clothing/crwn-clothing/src/components/loader.jsx"],"names":["React","Component","StyleSheet","View","Modal","Image","ActivityIndicator","Colors","Loader","constructor","props","state","isLoading","getDerivedStateFromProps","nextProps","render","zIndex","styles","modalBackground","activityIndicatorWrapper","loading","primary","create","flex","alignItems","flexDirection","justifyContent","backgroundColor","height","width","borderRadius","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,UADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,iBALF,QAMO,cANP;AAOA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC7BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE;AADX,KAAb;AAGD;;AAED,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2C;AACzC,WAAO;AACLF,MAAAA,SAAS,EAAEE,SAAS,CAACF;AADhB,KAAP;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAE,IADf;AAEE,MAAA,aAAa,EAAE,MAFjB;AAGE,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,SAHtB;AAIE,MAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAJT;AAKE,MAAA,cAAc,EAAE,MAAM,CAAG,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,wBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAE,KAAKR,KAAL,CAAWS,OAAzC;AAAkD,MAAA,KAAK,EAAEb,MAAM,CAACc,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CANF,CADF;AAsBH;;AArC8B;;AAwC/B,MAAMJ,MAAM,GAAGf,UAAU,CAACoB,MAAX,CAAkB;AACjCJ,EAAAA,eAAe,EAAE;AACfK,IAAAA,IAAI,EAAE,CADS;AAEfC,IAAAA,UAAU,EAAE,QAFG;AAGfC,IAAAA,aAAa,EAAE,QAHA;AAIfC,IAAAA,cAAc,EAAE,cAJD;AAKfC,IAAAA,eAAe,EAAE,qBALF;AAMfX,IAAAA,MAAM,EAAE;AANO,GADgB;AASjCG,EAAAA,wBAAwB,EAAE;AACxBQ,IAAAA,eAAe,EAAE,SADO;AAExBC,IAAAA,MAAM,EAAE,GAFgB;AAGxBC,IAAAA,KAAK,EAAE,GAHiB;AAIxBC,IAAAA,YAAY,EAAE,EAJU;AAKxBC,IAAAA,OAAO,EAAE,MALe;AAMxBP,IAAAA,UAAU,EAAE,QANY;AAOxBE,IAAAA,cAAc,EAAE;AAPQ;AATO,CAAlB,CAAf;AAoBA,eAAelB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Modal,\n  Image,\n  ActivityIndicator\n} from 'react-native';\nimport Colors from '../../config/Colors';\n\nclass Loader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: this.props.isLoading\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    return {\n      isLoading: nextProps.isLoading\n    };\n  }\n\n  render() {\n    return (\n      <Modal\n        transparent={true}\n        animationType={'none'}\n        visible={this.state.isLoading}\n        style={{ zIndex: 1100 }}\n        onRequestClose={() => { }}>\n        <View style={styles.modalBackground}>\n          <View style={styles.activityIndicatorWrapper}>\n          <ActivityIndicator animating={this.state.loading} color={Colors.primary} />\n\n          {/* If you want to image set source here */}\n          {/* <Image\n            source={require('../assets/images/loader.gif')}\n            style={{ height: 80, width: 80 }}\n            resizeMode=\"contain\"\n            resizeMethod=\"resize\"\n          /> */}\n        </View>\n      </View>\n    </Modal>\n  )\n}\n}\n\nconst styles = StyleSheet.create({\nmodalBackground: {\n  flex: 1,\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'space-around',\n  backgroundColor: '#rgba(0, 0, 0, 0.5)',\n  zIndex: 1000\n},\nactivityIndicatorWrapper: {\n  backgroundColor: '#FFFFFF',\n  height: 100,\n  width: 100,\n  borderRadius: 10,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-around'\n}\n});\n\nexport default Loader\n"]},"metadata":{},"sourceType":"module"}