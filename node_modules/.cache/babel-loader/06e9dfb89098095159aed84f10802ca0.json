{"ast":null,"code":"import _regeneratorRuntime from\"/Users/akash/crwn-clothing/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/akash/crwn-clothing/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/akash/crwn-clothing/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyAk2_P-E8-5htFkZejUrDI768QPOjE9PaI\",authDomain:\"crown-db-a3da8.firebaseapp.com\",databaseURL:\"https://crown-db-a3da8.firebaseio.com\",projectId:\"crown-db-a3da8\",storageBucket:\"crown-db-a3da8.appspot.com\",messagingSenderId:\"775876855110\",appId:\"1:775876855110:web:bec14d3fa285b750d25147\",measurementId:\"G-3QD1V11ZNX\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapshot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapshot=_context.sent;if(snapshot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();firebase.initializeApp(config);export var auth=firebase.auth();export var firestore=firebase.firestore();var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["/Users/akash/crwn-clothing/crwn-clothing/src/firebase/firebase.utils.jsx"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapshot","exists","displayName","email","createdAt","Date","set","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"ydAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,MAAM,CAAE,yCADG,CAEXC,UAAU,CAAE,gCAFD,CAGXC,WAAW,CAAE,uCAHF,CAIXC,SAAS,CAAE,gBAJA,CAKXC,aAAa,CAAE,4BALJ,CAMXC,iBAAiB,CAAE,cANR,CAOXC,KAAK,CAAE,2CAPI,CAQXC,aAAa,CAAE,cARJ,CAAf,CAWA,MAAO,IAAMC,CAAAA,yBAAyB,0FAAC,iBAAMC,QAAN,CAAeC,cAAf,sKACnCD,QADmC,iEAGjCE,OAHiC,CAGzBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAHyB,uBAIlBH,CAAAA,OAAO,CAACI,GAAR,EAJkB,QAIjCC,QAJiC,kBAOnCA,QAAQ,CAACC,MAP0B,0BAQhCC,WARgC,CAQZT,QARY,CAQhCS,WARgC,CAQnBC,KARmB,CAQZV,QARY,CAQnBU,KARmB,CASjCC,SATiC,CASvB,GAAIC,CAAAA,IAAJ,EATuB,wCAYjCV,CAAAA,OAAO,CAACW,GAAR,gBACJJ,WAAW,CAAXA,WADI,CAEJC,KAAK,CAALA,KAFI,CAGJC,SAAS,CAATA,SAHI,EAIDV,cAJC,EAZiC,0FAmBvCa,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,YAAMC,OAAzC,EAnBuC,wCAsBhCd,OAtBgC,uEAAD,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CA6BPV,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB,EAEA,MAAO,IAAM4B,CAAAA,IAAI,CAAG7B,QAAQ,CAAC6B,IAAT,EAAb,CACP,MAAO,IAAMf,CAAAA,SAAS,CAAGd,QAAQ,CAACc,SAAT,EAAlB,CAEP,GAAMgB,CAAAA,QAAQ,CAAG,GAAI9B,CAAAA,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB,CACAD,QAAQ,CAACE,mBAAT,CAA6B,CAAEC,MAAM,CAAE,gBAAV,CAA7B,EACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAML,CAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CAEP,cAAe9B,CAAAA,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyAk2_P-E8-5htFkZejUrDI768QPOjE9PaI\",\n    authDomain: \"crown-db-a3da8.firebaseapp.com\",\n    databaseURL: \"https://crown-db-a3da8.firebaseio.com\",\n    projectId: \"crown-db-a3da8\",\n    storageBucket: \"crown-db-a3da8.appspot.com\",\n    messagingSenderId: \"775876855110\",\n    appId: \"1:775876855110:web:bec14d3fa285b750d25147\",\n    measurementId: \"G-3QD1V11ZNX\"\n  };\n\nexport const createUserProfileDocument=async(userAuth,additionalData)=>{\nif(!userAuth) return;\n\nconst userRef=firestore.doc(`users/${userAuth.uid}`);\nconst snapshot=await userRef.get();\n\n\nif(!snapshot.exists) {\nconst {displayName, email}=userAuth;\nconst createdAt=new Date();\n\ntry{\nawait userRef.set({\n  displayName,\n  email,\n  createdAt,\n  ...additionalData\n})\n} catch(error){\nconsole.log('error creating user', error.message);\n}\n}\nreturn userRef;\n\n};\n\n\n\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}