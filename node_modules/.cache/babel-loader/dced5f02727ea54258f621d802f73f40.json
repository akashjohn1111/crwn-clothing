{"ast":null,"code":"var _jsxFileName = \"/Users/akash/crwn-clothing/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { UpdateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { connect } from 'react-redux';\nconst CollectionsOverviewWithSpinner = WithSpinner(collectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      UpdateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      UpdateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 68\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  UpdateCollections: collectionsMap => dispatch(UpdateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/akash/crwn-clothing/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","UpdateCollections","WithSpinner","connect","CollectionsOverviewWithSpinner","collectionsOverview","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,MAAMC,8BAA8B,GAAGF,WAAW,CAACG,mBAAD,CAAlD;AACA,MAAMC,yBAAyB,GAAGJ,WAAW,CAACJ,cAAD,CAA7C;;AACA,MAAMS,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC/B;AACJC,MAAAA,OAAO,EAAC;AADJ,KAD+B;AAAA,SAIpCC,uBAJoC,GAIX,IAJW;AAAA;;AAMpCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACX,MAAAA;AAAD,QAAoB,KAAKY,KAA/B;AACA,UAAMC,aAAa,GAACf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAApB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAgB;AACxC,YAAMC,cAAc,GAAGlB,+BAA+B,CAACiB,QAAD,CAAtD;AACAhB,MAAAA,iBAAiB,CAACiB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAC;AAAT,OAAd;AAEA,KALD;AAOD;;AAIFU,EAAAA,MAAM,GAAE;AACN,UAAK;AAACV,MAAAA;AAAD,QAAU,KAAKD,KAApB;AACA,UAAM;AAACY,MAAAA;AAAD,QAAQ,KAAKR,KAAnB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAlC;AAAwC,MAAA,MAAM,EAAGT,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AACA,MAAA,MAAM,EAAGT,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAkDG,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD;;AA9BoC;;AAiCrC,MAAMU,kBAAkB,GAACC,QAAQ,KAAG;AAClCvB,EAAAA,iBAAiB,EAACiB,cAAc,IAAEM,QAAQ,CAACvB,iBAAiB,CAACiB,cAAD,CAAlB;AADR,CAAH,CAAjC;;AAOF,eAAef,OAAO,CAAC,IAAD,EAAMoB,kBAAN,CAAP,CAAiChB,QAAjC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\nimport {UpdateCollections} from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport {connect} from 'react-redux';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(collectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nclass ShopPage extends React.Component { \n  state={\n    loading:true\n  };\n   unsubscribeFromSnapshot =null;\n\n   componentDidMount(){\n     const {UpdateCollections}=this.props;\n     const collectionRef=firestore.collection('collections');\n     collectionRef.onSnapshot(async snapshot=>{\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      UpdateCollections(collectionsMap);\n      this.setState({loading:false});\n\n     });\n\n   }\n  \n\n\n  render(){\n    const{loading}=this.state;\n    const {match}=this.props;\n    return(\n      <div className='shop-page'>\n        <Route  exact path={`${match.path}`}    render={(props) => <CollectionsOverviewWithSpinner isLoading={loading}{...props} /> }/>\n        <Route path={`${match.path}/:collectionId`} \n        render={(props) => <CollectionPageWithSpinner isLoading={loading}{...props} /> }/>\n      </div>\n    );\n  }\n}\n\n  const mapDispatchToProps=dispatch=>({\n    UpdateCollections:collectionsMap=>dispatch(UpdateCollections(collectionsMap))\n  });\n  \n  \n      \n\nexport default connect(null,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}